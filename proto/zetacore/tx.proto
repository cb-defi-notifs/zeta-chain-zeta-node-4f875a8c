syntax = "proto3";
package zetachain.zetacore.zetacore;

// this line is used by starport scaffolding # proto/tx/import
import "zetacore/tss_voter.proto";
import "common/common.proto";

option go_package = "github.com/zeta-chain/zetacore/x/zetacore/types";

// Msg defines the Msg service.
service Msg {
  rpc ZetaConversionRateVoter(MsgZetaConversionRateVoter) returns (MsgZetaConversionRateVoterResponse);
  rpc AddToWatchList(MsgAddToWatchList) returns (MsgAddToWatchListResponse);
  rpc AddToOutTxTracker(MsgAddToOutTxTracker) returns (MsgAddToOutTxTrackerResponse);
  rpc RemoveFromOutTxTracker(MsgRemoveFromOutTxTracker) returns (MsgRemoveFromOutTxTrackerResponse);
  rpc CreateTSSVoter(MsgCreateTSSVoter) returns (MsgCreateTSSVoterResponse);
  rpc GasBalanceVoter(MsgGasBalanceVoter) returns (MsgGasBalanceVoterResponse);
  rpc GasPriceVoter(MsgGasPriceVoter) returns (MsgGasPriceVoterResponse);
  rpc NonceVoter(MsgNonceVoter) returns (MsgNonceVoterResponse);
  rpc ReceiveConfirmation(MsgReceiveConfirmation) returns (MsgReceiveConfirmationResponse);
  rpc SendVoter(MsgSendVoter) returns (MsgSendVoterResponse);
  rpc SetNodeKeys(MsgSetNodeKeys) returns (MsgSetNodeKeysResponse);
}

message MsgZetaConversionRateVoter {
  string creator = 1;
  string chain = 2;
  string zetaConversionRate = 3;
  uint64 blockNumber = 4;
}

message MsgZetaConversionRateVoterResponse {
}

message MsgAddToOutTxTracker {
  string creator = 1;
  string chain = 2;
  uint64 nonce = 3;
  string txHash = 4;
}

message MsgAddToOutTxTrackerResponse {
}

message MsgAddToWatchList {
  string creator = 1;
  string chain = 2;
  uint64 nonce = 3;
  string txHash = 4;
}

message MsgAddToWatchListResponse {
}

message MsgRemoveFromOutTxTracker {
  string creator = 1;
  string chain = 2;
  uint64 nonce = 3;
}

message MsgRemoveFromOutTxTrackerResponse {
}

// this line is used by starport scaffolding # proto/tx/message
message MsgCreateTSSVoter {
  string creator = 1;
  string chain = 3;
  string address = 4;
  string pubkey = 5;
}

message MsgCreateTSSVoterResponse { }


message MsgGasBalanceVoter {
  string creator = 1;
  string chain = 2;
  string balance = 3;
  uint64 blockNumber = 4;
}

message MsgGasBalanceVoterResponse {
}

message MsgGasPriceVoter {
  string creator = 1;
  string chain = 2;
  uint64 price = 3;
  uint64 blockNumber = 4;
  string supply = 5;
}

message MsgGasPriceVoterResponse {
}

message MsgNonceVoter {
  string creator = 1;
  string chain = 2;
  uint64 nonce = 3;
}

message MsgNonceVoterResponse {
}

message MsgReceiveConfirmation {
  string creator = 1;
  string sendHash = 2;
  string outTxHash = 3;
  uint64 outBlockHeight = 4;
  string mMint = 5;
  common.ReceiveStatus status = 6;
  string chain = 7;
  uint64 out_tx_nonce = 8;
}

message MsgReceiveConfirmationResponse {
}

message MsgSendVoter {
  string creator = 1;
  string sender = 2;
  string senderChain = 3;
  string receiver = 4;
  string receiverChain = 5;
  string zetaBurnt = 6;
//  string mMint = 7;
  string message = 8;
  string inTxHash = 9;
  uint64 inBlockHeight = 10;
  uint64 gasLimit = 11;
}

message MsgSendVoterResponse {
}

message MsgSetNodeKeys {
  string creator = 1;
  common.PubKeySet pubkeySet = 2;
  string validatorConsensusPubkey = 3;
}

message MsgSetNodeKeysResponse {
}
