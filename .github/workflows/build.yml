name: Build

on:
  push:
    branches:
      - develop
      - athens2-develop
    tags:
      - v*
      - athens2-*
  pull_request:
    branches: 
      - develop
      - athens2-develop 
      - release/athens2*
    types: 
      - synchronize
      - opened
      - reopened
      - ready_for_review

env:
  S3_BUCKET_NAME: "zetachain-deployment-files"
  AWS_REGION: "us-east-1"
  GITHUB_REF_NAME: "$(echo ${{ github.ref_name }} | tr '//' '-')"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:

    - uses: actions/checkout@v3

    - name: setup-git-credentials
      uses: de-vri-es/setup-git-credentials@v2.0.8
      with:
        credentials: ${{ secrets.PAT_GITHUB_SERVICE_ACCT }}

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build zetacored and zetaclientd
      run: |
        make install
        cp "$HOME"/go/bin/* ./

    # - name: Test
    #   if: ${{ env.GITHUB_REF_NAME != 'athens2-develop' }}
    #   run: |
    #     echo "Running Build Tests"
    #     go test -v -coverprofile coverage.out  $(go list ./... | grep -v /x/zetacore/)

    - name: Save Binaries as Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ github.sha }}
        path: |
            zetacored
            zetaclientd
        
  upload:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: 
      - build-and-test

    steps:
    - uses: actions/checkout@v3

    - name: setup-git-credentials
      uses: de-vri-es/setup-git-credentials@v2.0.8
      with:
        credentials: ${{ secrets.PAT_GITHUB_SERVICE_ACCT }} 

    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v6

    - name: Git Hash
      run: |
        echo "GIT_HASH=$(git rev-parse --short HEAD)" >> ${GITHUB_ENV}
        echo "WORKSPACE_DIR=$(pwd)" >> ${GITHUB_ENV}
        ls -lah ./

    - name: set-branch-name
      uses: ./.github/actions/set-branch-name
      with:
        github_ref: "${{github.ref}}"
        github_event: "${{ github.event_name }}"
        github_head_ref: "${{ github.event.pull_request.head.ref }}"
        github_commit_sha: "${{ env.GIT_HASH }}"
        current_branch_name: "${{ steps.branch-name.outputs.current_branch }}"

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    # - name: build-zetavisor
    #   uses: ./.github/actions/build-zetavisor
    #   with:
    #     zetavisor_version: "zetavisor-v0.1.3"
    #     workspace_dir: "${{ env.WORKSPACE_DIR }}"

    - name: install awscli
      uses: ./.github/actions/install-awscli
      with:
        download_url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"

    - uses: actions/download-artifact@v3
      with:
        name: binaries-${{ github.sha }}
        path: ./

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}       
        aws-region: ${{ env.AWS_REGION }}

    - name: Debug step
      run: |
        pwd
        ls -lah ./

    - name: upload-files-to-s3
      uses: ./.github/actions/upload-to-s3
      with:
        bucket-name: ${{ env.S3_BUCKET_NAME }}
        release-name: ${{ env.RELEASE_NAME }}
        git-sha: ${{ github.sha }}
        files: |
          zetacored
          zetaclientd

    # - name: Build, tag, and push docker images
    #   uses:  ./.github/actions/build-docker-images
    #   with:
    #     DOCKER_FILENAME: Dockerfile
    #     REPOSITORY_NAME: zeta-node
    #     IMAGE_TAG: ${{ env.TAG_NAME }}
    #     GHCR_USERNAME: ${{ secrets.PAT_GITHUB_SERVICE_ACCT_USERNAME }}
    #     GHCR_TOKEN: ${{ secrets.PAT_GITHUB_SERVICE_ACCT }}

    # # Approval will be required closer to mainnet
    # - name: Require Approval To Create a Release
    #   uses: softprops/action-gh-release@v1
    #   if: startsWith(github.ref, 'refs/tags/athens')
    #   with:
    #     token: ${{ secrets.PAT_GITHUB_SERVICE_ACCT }}
    #     files: |
    #       zetacored
    #       zetaclientd

    - name: Create GitHub Release for ZetaCore/ZetaClient
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        token: ${{ secrets.PAT_GITHUB_SERVICE_ACCT }}
        files: |
          zetacored
          zetaclientd
